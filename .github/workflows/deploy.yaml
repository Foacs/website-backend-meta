name: Deploy to AWS

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment name'
        required: true
        type: string
      region:
        description: 'AWS Region to deploy to'
        required: true
        type: string

jobs:
  setup_aws_cli:
    name: Set up AWS CLI
    runs-on: ubuntu-latest
    steps:
      - name: Cache AWS CLI
        id: cache-aws-cli
        uses: actions/cache@v3
        with:
          path: |
            awscliv2.zip
            aws
          key: ${{ runner.os }}-aws-cli

      - name: Download AWS CLI
        if: steps.cache-aws-cli.outputs.cache-hit != 'true'
        run: |
          echo "----Get aws cli----"
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          echo "----Unzip----"
          unzip -q awscliv2.zip

  deploy:
    environment: ${{ inputs.environment }}
    name: Deploy the structure on AWS
    runs-on: ubuntu-latest
    needs: setup_aws_cli
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache AWS CLI
        id: cache-aws-cli
        uses: actions/cache@v3
        with:
          path: |
            awscliv2.zip
            aws
          key: ${{ runner.os }}-aws-cli

      - name: Install AWS CLI
        run: |
          echo "----Install----"
          sudo ./aws/install --update 
          echo "----Check aws----"
          aws --version

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ inputs.region }}

      - name: Configure environment name
        id: env-name
        env:
          REPO: ${{ github.repository }}
        run: |
          ENVIRONMENT="Foacs-website-be"
          ENVIRONMENT="${ENVIRONMENT}-${{ inputs.environment }}"
          echo "Environment name: $ENVIRONMENT"
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

      - name: Upload CloudFormation template to S3
        run: |
          echo "----Sync template file to S3 bucket----"
          aws s3 sync ./infrastructure s3://${{ secrets.AWS_BUCKET_NAME }}/${{ inputs.environment }}/

      - name: Deploy stack
        run: >
          if ! aws cloudformation describe-stacks 
          --stack-name ${{ steps.env-name.outputs.environment }}; then

          aws cloudformation create-stack 
          --stack-name ${{ steps.env-name.outputs.environment }}
          --template-url https://${{ secrets.AWS_BUCKET_NAME }}.s3.${{ github.event.inputs.region }}.amazonaws.com/${{ inputs.environment }}/foacs-be.cfn.yml
          --parameters ParameterKey=Env,ParameterValue=${{ inputs.environment }} ParameterKey=Region,ParameterValue=${{ github.event.inputs.region }} 
          ParameterKey=BucketName,ParameterValue=${{ secrets.AWS_BUCKET_NAME }}
          --capabilities CAPABILITY_IAM

          else

          aws cloudformation update-stack 
          --stack-name ${{ steps.env-name.outputs.environment }}
          --template-url https://${{ secrets.AWS_BUCKET_NAME }}.s3.${{ github.event.inputs.region }}.amazonaws.com/${{ inputs.environment }}/foacs-be.cfn.yml
          --parameters ParameterKey=Env,ParameterValue=${{ inputs.environment }} ParameterKey=Region,ParameterValue=${{ github.event.inputs.region }} 
          ParameterKey=BucketName,ParameterValue=${{ secrets.AWS_BUCKET_NAME }}
          --capabilities CAPABILITY_IAM

          fi
